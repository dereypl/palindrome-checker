{"version":3,"sources":["utils/routes/index.js","components/icons/PersonIcon.js","components/inputs/Input.js","components/buttons/Button.js","services/authService.js","components/icons/ArrowsIcon.js","components/logotypes/AppLogo.js","components/views/AuthForm.js","components/ui-config/GlobalStyle.js","components/ui-config/Theme.js","components/ui-config/StylesProvider.js","utils/routes/PrivateRoute.js","store/reducers/palindromesReducer.js","services/palindromeService.js","components/containers/SearchBarContainer.js","components/icons/ErrorIcon.js","components/icons/CheckIcon.js","components/containers/PalindromeContainer.js","components/views/Palindromes.js","store/configureStore.js","App.js","index.js"],"names":["ROUTES","AUTH","PALINDROMES","PersonIcon","width","height","xmlns","viewBox","id","data-name","transform","cx","cy","r","fill","d","Input","styled","input","marginTop","theme","fontSize","m","fontWeight","regular","colors","inputs_background","text_gray","hasError","css","error","SearchPalindrome","xl","Button","button","dark_blue","bold","yellow","gray","PalindromeCheck","FAKE_DB_USER","authenticate","username","password","localStorage","setItem","ArrowsIcon","fillColor","LogoWrapper","div","smallWhite","IconWrapper","TextWrapper","s","semiBold","AppLogo","Wrapper","LoginForm","form","InputsWrapper","ErrorWrapper","AuthRequest","hasInputError","inputError","undefined","value","hasFormErrors","errors","InputValidationError","message","AuthRequestError","isError","AuthFrom","history","useHistory","useForm","handleSubmit","register","useState","authError","setAuthError","onSubmit","authService","replace","name","type","placeholder","onFocus","ref","required","disabled","GlobalStyle","createGlobalStyle","l","xxl","AppWrapper","StylesProvider","children","PrivateRoute","Component","component","restProps","acceptedRoles","render","props","getItem","to","pathname","state","from","location","palindromesReducer","initialState","payload","palindromes","addToList","expression","dispatch","isPalindrome","trim","length","toLowerCase","Math","floor","i","checkIsPalindrome","SearchBar","section","InputWrapper","ButtonWrapper","SearchBarContainer","inputValue","useDispatch","setExpression","onChange","e","target","onClick","palindromeService","ErrorIcon","CheckIcon","stroke","strokeWidth","Expression","StatusMessage","PalindromeContainer","status","palindrome","getStatusIcon","Header","header","Palindromes","palindromesCollection","useSelector","map","index","key","store","createStore","applyMiddleware","thunk","App","basename","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7038ef74.chunk.js","sourcesContent":["export const ROUTES = {\r\n    PUBLIC: {\r\n        AUTH: '/palindrome-checker',\r\n    },\r\n\r\n    USER: {\r\n        PALINDROMES: '/palindrome-checker/user/palindromes',\r\n    },\r\n};","import React from \"react\";\r\n\r\nexport const PersonIcon = ({width, height}) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} viewBox=\"0 0 85 85\">\r\n        <g id=\"Group_71\" data-name=\"MP-GROUP\" transform=\"translate(-689 -677)\">\r\n            <circle id=\"Ellipse_1\" data-name=\"MP-ECLIPSE\" cx=\"42.5\" cy=\"42.5\" r=\"42.5\" transform=\"translate(689 677)\"\r\n                    fill=\"#f6f8fa\"/>\r\n            <g id=\"person-24px_1_\" data-name=\"MP-PERSON\" transform=\"translate(707 695)\">\r\n                <path id=\"MP-PATH1\" data-name=\"MP-PATH1\"\r\n                      d=\"M20.054,20.054a8.027,8.027,0,1,0-8.027-8.027A8.025,8.025,0,0,0,20.054,20.054Zm0,4.014C14.7,24.068,4,26.757,4,32.095v4.014H36.108V32.095C36.108,26.757,25.412,24.068,20.054,24.068Z\"\r\n                      transform=\"translate(4.946 4.946)\" fill=\"#1b254f\"/>\r\n                <path id=\"MP-PATH2\" data-name=\"MP-PATH2\" d=\"M0,0H50V50H0Z\" fill=\"none\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);","import styled, {css} from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n      display: flex;\r\n      margin-top: ${({marginTop}) => marginTop || '0'};\r\n      height: ${({height}) => height || '4rem'};\r\n      padding: 1.5rem 3rem 1.5rem 3rem;\r\n      font-size: ${({theme}) => theme.fontSize.m};\r\n      font-weight: ${({theme}) => theme.fontWeight.regular};\r\n      background-color: ${({theme}) => theme.colors.inputs_background};\r\n      border: none;\r\n      border-radius: 1rem;\r\n      width: ${({width}) => width || '100%'};\r\n\r\n      ::placeholder {\r\n        color: ${({theme}) => theme.colors.text_gray};\r\n      }\r\n      &:focus{\r\n         outline: none;\r\n      }\r\n      \r\n      ${({hasError}) => hasError && css`\r\n          border: 0.1rem solid ${({theme}) => theme.colors.error};\r\n      `}\r\n      \r\n      ${({SearchPalindrome}) => SearchPalindrome && css`\r\n          font-size: ${({theme}) => theme.fontSize.xl};\r\n          height: 5rem;\r\n      `}\r\n`;\r\n\r\nexport default Input;","import styled, {css} from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n      display: flex;\r\n      padding: 0;\r\n      margin-top: ${({marginTop}) => marginTop || '0'};\r\n      background-color: ${({theme}) => theme.colors.dark_blue};\r\n      width: ${({width}) => width || '100%'};\r\n      height: 5rem;\r\n      border: none;\r\n      border-radius: 1rem;\r\n      font-weight: ${({theme}) => theme.fontWeight.bold};\r\n      font-size: ${({theme}) => theme.fontSize.m};\r\n      color: white;\r\n      text-decoration: none;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      box-shadow: 0 10px 15px 0 rgba(0, 0, 0, 0.1), 0 10px 20px 0 rgba(0, 0, 0, 0.06);\r\n      \r\n      transition: background-position .3s;\r\n      background-position: 0;\r\n      background-image: linear-gradient(120deg, transparent 0%, transparent 50%, ${({theme}) => theme.colors.yellow} 50%);\r\n      background-size: 220%;\r\n      \r\n      &:hover{\r\n          color: ${({theme}) => theme.colors.dark_blue};\r\n          background-position: 100%;\r\n          }\r\n      }\r\n      :disabled{\r\n          cursor: default;\r\n          background-color: ${({theme}) => theme.colors.gray};\r\n          &:hover{\r\n            background-position: 0;\r\n            color: white;\r\n          }\r\n      }\r\n       &:focus{\r\n           outline: none;\r\n       }\r\n       \r\n       ${({PalindromeCheck}) => PalindromeCheck && css`\r\n\r\n          :disabled{\r\n              cursor: default;\r\n              color: ${({theme}) => theme.colors.gray};\r\n              background-color: ${({theme}) => theme.colors.dark_blue};\r\n              &:hover{\r\n                  background-position: 0;\r\n                  color: ${({theme}) => theme.colors.gray};\r\n               }\r\n          }\r\n      `} \r\n`;\r\n\r\nexport default Button;","const AUTH_TOKEN = 'AUTH_TOKEN';\r\nconst FAKE_DB_USER = {\r\n    username: 'admin',\r\n    password: 'admin'\r\n};\r\n\r\n/*\r\n    User authentication implemented on frontend is highly not secure.\r\n    Everything that we write is send to the browser. Because of that user can see,\r\n    or even worst - interfere with the app security.\r\n    We should keep passwords in an encrypted form - but it's impossible to store any secrets without backed service.\r\n    User can open browser devtools and change memory variables stored in localStorage, sessionStorage and cookies.\r\n\r\n    In my opinion, we should use frontend + backend with the JWT.\r\n    Username and hash of the password is stored inside of the database and on auth request\r\n    we check if the credentials are valid. If everything is ok, we generate the token and send it back to the user.\r\n    To gain access for the backend C.R.U.D. operations we should include JWT in HTTP headers.\r\n    Even if client change properties of the token like 'user_role' JWT signature will not be valid.\r\n    API should always check the token and send HTTP 401 or 403 errors if needed.\r\n */\r\n\r\n// --- LOGIN / LOGOUT ---\r\nconst logInUser = () => localStorage.setItem(AUTH_TOKEN, 'token');\r\nexport const isUserLogged = () => localStorage.getItem(AUTH_TOKEN) === 'token';\r\n\r\n\r\n// --- AUTHENTICATE USER ---\r\nexport const authenticate = (username, password) => {\r\n\r\n    if (username === FAKE_DB_USER.username && password === FAKE_DB_USER.password) {\r\n        logInUser();\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ArrowsIcon = ({fillColor}) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={fillColor} width=\"48px\" height=\"48px\">\r\n        <g>\r\n            <rect fill=\"none\" height=\"24\" width=\"24\"/>\r\n        </g>\r\n        <g>\r\n            <path d=\"M22,8l-4-4v3H3v2h15v3L22,8z\"/>\r\n            <path d=\"M2,16l4,4v-3h15v-2H6v-3L2,16z\"/>\r\n        </g>\r\n    </svg>\r\n);","import React from 'react'\r\nimport styled, {css} from \"styled-components\";\r\nimport {ArrowsIcon} from \"../icons/ArrowsIcon\";\r\n\r\nconst LogoWrapper = styled.div`\r\n      display:flex;\r\n      width: 50rem;\r\n      height: 10rem;\r\n\r\n      ${({smallWhite}) => smallWhite === true && css`\r\n          width: 38rem;\r\n          margin-bottom: 4rem;\r\n      `}\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n      display:flex;\r\n      width: 15%;\r\n      height: 100%;\r\n      align-items: center;\r\n      justify-content: center;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n      display:flex;\r\n      width: 90%;\r\n      height: 100%;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      position:relative;\r\n\r\n      span {\r\n        font-size: 4rem;\r\n        font-weight: ${({theme}) => theme.fontWeight.bold};\r\n        color: ${({theme}) => theme.colors.dark_blue};\r\n          ::after{\r\n             content:'BY MATEUSZ PASICH';\r\n             font-size: ${({theme}) => theme.fontSize.s};\r\n             font-weight: ${({theme}) => theme.fontWeight.semiBold};\r\n             position:absolute;\r\n             right: 1.3rem;\r\n             bottom: 1.8rem;\r\n             color: ${({theme}) => theme.colors.gray};\r\n          };\r\n      }\r\n      \r\n      ${({smallWhite}) => smallWhite === true && css`\r\n          span {\r\n            font-size:  3rem;\r\n            color: white;\r\n              ::after{\r\n                bottom: 2.2rem;\r\n              }\r\n           }\r\n      `}\r\n`;\r\n\r\nconst AppLogo = ({smallWhite}) => (\r\n    <LogoWrapper smallWhite={smallWhite}>\r\n        <IconWrapper>\r\n            <ArrowsIcon fillColor={smallWhite ? 'white' : '#1B254F'}/>\r\n        </IconWrapper>\r\n        <TextWrapper smallWhite={smallWhite}>\r\n            <span>Palindrome checker</span>\r\n        </TextWrapper>\r\n    </LogoWrapper>\r\n);\r\n\r\nexport default AppLogo;","import React, {useState} from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {PersonIcon} from \"../icons/PersonIcon\";\r\nimport Input from \"../inputs/Input\";\r\nimport Button from \"../buttons/Button\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport * as authService from \"../../services/authService\";\r\nimport {ROUTES} from \"../../utils/routes\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport AppLogo from \"../logotypes/AppLogo\";\r\n\r\nconst Wrapper = styled.div`\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100vw;\r\n      height: 100vh;\r\n      background-color: ${({theme}) => theme.colors.dark_blue};\r\n      justify-content: center;\r\n      align-items: center;\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 5rem;\r\n      width: 40rem;\r\n      height: 47rem;\r\n      border-radius: 2rem;\r\n      background-color: white;\r\n      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 30px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nconst InputsWrapper = styled.div`\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n      margin-top: 4rem;\r\n`;\r\n\r\nconst ErrorWrapper = styled.div`\r\n      display: flex;\r\n      width: 100%;\r\n      font-size: ${({theme}) => theme.fontSize.s};\r\n      padding-top: 0.3rem;\r\n      height: 3rem;\r\n      color: ${({theme}) => theme.colors.error};\r\n      justify-content: flex-end;\r\n      \r\n      ${({AuthRequest}) => AuthRequest && css`\r\n          justify-content: center;\r\n          font-size: ${({theme}) => theme.fontSize.m};\r\n          margin-top: -2rem;\r\n      `}\r\n`;\r\n\r\n\r\n// --- CHECK IF ERRORS ---\r\nconst hasInputError = inputError => inputError && inputError.value === undefined;\r\nconst hasFormErrors = errors => !(errors.username === undefined && errors.password === undefined);\r\n\r\n// --- INPUT ERROR MESSAGES ---\r\nconst InputValidationError = inputError => (\r\n    <ErrorWrapper>\r\n        {hasInputError(inputError) ? null : inputError.value.message}\r\n    </ErrorWrapper>\r\n);\r\n\r\n// --- AUTH REQUEST ERROR MESSAGE ---\r\nconst AuthRequestError = ({isError}) => (\r\n    <ErrorWrapper AuthRequest>\r\n        {isError ? 'Username or password incorrect.' : null}\r\n    </ErrorWrapper>\r\n);\r\n\r\n\r\nconst AuthFrom = () => {\r\n    const history = useHistory();\r\n    const {handleSubmit, register, errors} = useForm();\r\n    const [authError, setAuthError] = useState(false);\r\n\r\n    const onSubmit = ({username, password}) => {\r\n        if (authService.authenticate(username, password)) history.replace(ROUTES.USER.PALINDROMES);\r\n        else if (!authError) setAuthError(true);\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <AppLogo smallWhite={true}/>\r\n            <LoginForm onSubmit={handleSubmit(onSubmit)}>\r\n                <PersonIcon width=\"10rem\" height=\"10rem\"/>\r\n                <InputsWrapper>\r\n                    <Input\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        onFocus={() => setAuthError(false)}\r\n                        hasError={hasInputError(errors.username)}\r\n                        ref={register({required: \"Username cannot be empty.\"})}\r\n                    />\r\n                    <InputValidationError value={errors.username}/>\r\n                    <Input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onFocus={() => setAuthError(false)}\r\n                        hasError={hasInputError(errors.password)}\r\n                        ref={register({required: \"Password cannot be empty.\"})}\r\n                    />\r\n                    <InputValidationError value={errors.password}/>\r\n                </InputsWrapper>\r\n                <AuthRequestError isError={authError}/>\r\n                <Button disabled={hasFormErrors(errors)}>Login</Button>\r\n            </LoginForm>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default AuthFrom;","import {createGlobalStyle} from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  \r\n    *, *::before, *::after{\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    }    \r\n    \r\n    html{\r\n    font-size: 62.5%;\r\n    }\r\n    \r\n    body{\r\n    width: 100%;\r\n    height: auto;\r\n    font-size: 1.6rem; // -> \"happy rems\"\r\n    font-family: \"Montserrat\", sans-serif;\r\n    background-color: #f6f8fa;\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","export const theme = {\r\n    colors:{\r\n        dark_blue: '#1B254F',\r\n        yellow: '#ffc900',\r\n        inputs_background: '#f6f8fa',\r\n        text_gray: '#43464d',\r\n        gray: '#B2B2B2',\r\n        error: '#d1003b',\r\n    },\r\n\r\n    fontWeight: {\r\n        regular: 400,\r\n        semiBold: 600,\r\n        bold: 700,\r\n    },\r\n\r\n    fontSize: {\r\n        s: '1.1rem',\r\n        m: '1.3rem',\r\n        l: '1.4rem',\r\n        xl: '1.7rem',\r\n        xxl: '2rem',\r\n    }\r\n};","import React from 'react';\r\nimport styled, {ThemeProvider} from 'styled-components';\r\nimport GlobalStyle from \"./GlobalStyle\";\r\nimport {theme} from \"./Theme\";\r\n\r\nconst AppWrapper = styled.div`\r\n      display: flex;\r\n      width: 100vw;\r\n      min-height: 100vh;\r\n      position:relative;\r\n      flex-direction: column;\r\n      overflow-x: hidden;\r\n`;\r\n\r\nconst StylesProvider = ({children}) => (\r\n    <AppWrapper>\r\n        <GlobalStyle/>\r\n        <ThemeProvider theme={theme}>\r\n            {children}\r\n        </ThemeProvider>\r\n    </AppWrapper>\r\n);\r\n\r\nexport default StylesProvider;","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {ROUTES} from './index';\r\nimport * as authService from \"../../services/authService\";\r\n\r\nconst PrivateRoute = ({component: Component, acceptedRoles, ...restProps}) => (\r\n\r\n    <Route {...restProps} render={props => authService.isUserLogged() ?\r\n        <Component {...props} />\r\n        :\r\n        <Redirect to={{pathname: ROUTES.PUBLIC.AUTH, state: {from: props.location}}}/>}\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;","import initialState from '../../utils/init_state'\r\n\r\n// --- ACTION TYPES ---\r\nexport const PALINDROME_LIST_ADD = 'PALINDROME_LIST_ADD';\r\n\r\n// --- REDUCER ---\r\nconst palindromesReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case PALINDROME_LIST_ADD:\r\n            return {\r\n                ...state,\r\n                palindromes: [payload, ...state.palindromes]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default palindromesReducer;","import {PALINDROME_LIST_ADD} from \"../store/reducers/palindromesReducer\";\r\n\r\nexport const checkIsPalindrome = expression => {\r\n\r\n    // --- CHECK IF NOT NULL OR UNDEFINED ---\r\n    if (!expression) return false;\r\n\r\n    // --- CHECK IF LENGTH > 0 ---\r\n    if (!expression.trim().length) return false;\r\n\r\n    // --- REMOVE WHITE SPACES & MAKE CASE INSENSITIVE ---\r\n    expression = expression.toLowerCase().replace(/ /g, '');\r\n\r\n    // --- FASTER THAN `str.split('').reverse().join('')` ---\r\n    let length = Math.floor(expression.length / 2);\r\n    for (let i = 0; i < length; i++) {\r\n        if (expression[i] !== expression[expression.length - i - 1])\r\n            return false;\r\n    }\r\n\r\n    // --- EVERYTHING OK, IT'S A PALINDROME ---\r\n    return true;\r\n};\r\n\r\nexport const addToList = (expression) => dispatch => {\r\n\r\n    // --- CHECK EXPRESSION AND RETURN BOOLEAN VALUE ---\r\n    let isPalindrome = checkIsPalindrome(expression);\r\n\r\n    // --- ADD EXPRESSION TO REDUX PALINDROMES LIST ---\r\n    dispatch({type: PALINDROME_LIST_ADD, payload: {value: expression, isPalindrome}});\r\n};","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../inputs/Input\";\r\nimport Button from \"../buttons/Button\";\r\nimport * as palindromeService from \"../../services/palindromeService\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst SearchBar = styled.section`\r\n      display:flex;\r\n      width: 100%;\r\n      height: 15rem;\r\n      background-color: ${({theme}) => theme.colors.dark_blue};\r\n      border-radius: 3rem;\r\n      margin-top: -7.5rem;\r\n      margin-bottom: 6rem;\r\n      align-items: center;\r\n      padding: 0 5rem;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n      display: flex;\r\n      width: 80%;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n      display:flex;\r\n      width: 20%;\r\n      margin-left: 3rem;\r\n`;\r\n\r\n// --- SIMPLE VALIDATION: NOT NULL/UNDEFINED & LENGTH > 0 & NOT EMPTY ---\r\nconst validateExpression = inputValue => inputValue && inputValue.length && inputValue.trim() !== '';\r\n\r\nconst SearchBarContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [expression, setExpression] = useState('');\r\n\r\n    // --- ADD EXPRESSION TO REDUX PALINDROMES LIST & CLEAR INPUT ---\r\n    const handleCheckButton = () => {\r\n        dispatch(palindromeService.addToList(expression));\r\n        setExpression('');\r\n    };\r\n\r\n    return (\r\n        <SearchBar>\r\n            <InputWrapper>\r\n                <Input\r\n                    SearchPalindrome\r\n                    type='text'\r\n                    placeholder='Write your expression...'\r\n                    value={expression}\r\n                    onChange={(e) => setExpression(e.target.value)}\r\n                />\r\n            </InputWrapper>\r\n            <ButtonWrapper>\r\n                <Button\r\n                    PalindromeCheck\r\n                    disabled={!validateExpression(expression)}\r\n                    onClick={handleCheckButton}>\r\n                    Check palindrome {'>'}\r\n                </Button>\r\n            </ButtonWrapper>\r\n        </SearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBarContainer;","import React from \"react\";\r\n\r\nexport const ErrorIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n        <g id=\"Group_5\" data-name=\"Group 5\" transform=\"translate(-475 -76)\">\r\n            <circle id=\"Ellipse_1\" data-name=\"Ellipse 1\" cx=\"24\" cy=\"24\" r=\"24\" transform=\"translate(475 76)\" fill=\"#f6f8fa\"/>\r\n            <g id=\"check-black-48dp\" transform=\"translate(475 76)\">\r\n                <path id=\"Path_2\" data-name=\"Path 2\" d=\"M0,0H48V48H0Z\" fill=\"none\"/>\r\n                <g id=\"Group_6\" data-name=\"Group 6\" transform=\"translate(-0.199 1.301)\">\r\n                    <rect id=\"Rectangle_3\" data-name=\"Rectangle 3\" width=\"4.464\" height=\"26.229\"\r\n                          transform=\"translate(31.793 11.747) rotate(45)\" fill=\"#B2B2B2\"/>\r\n                    <rect id=\"Rectangle_4\" data-name=\"Rectangle 4\" width=\"4.464\" height=\"26.229\"\r\n                          transform=\"translate(34.95 30.293) rotate(135)\" fill=\"#B2B2B2\"/>\r\n                </g>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);","import React from \"react\";\r\n\r\nexport const CheckIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n        <g id=\"Group_4\" data-name=\"Group 4\" transform=\"translate(-475 -76)\">\r\n            <circle id=\"Ellipse_1\" data-name=\"Ellipse 1\" cx=\"24\" cy=\"24\" r=\"24\" transform=\"translate(475 76)\" fill=\"#f6f8fa\"/>\r\n            <g id=\"check-black-48dp\" transform=\"translate(475 76)\">\r\n                <path id=\"Path_2\" data-name=\"Path 2\" d=\"M0,0H48V48H0Z\" fill=\"none\"/>\r\n                <path id=\"Path_3\" data-name=\"Path 3\"\r\n                      d=\"M10.969,19.9,5.33,14.258,3.41,16.165l7.559,7.559L27.2,7.5,25.29,5.59Z\"\r\n                      transform=\"translate(9.09 8.91)\" fill=\"#1b254f\" stroke=\"#1b254f\" strokeWidth=\"3\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);","import React from \"react\";\r\nimport styled, {css} from \"styled-components\";\r\nimport {ErrorIcon} from \"../icons/ErrorIcon\";\r\nimport {CheckIcon} from \"../icons/CheckIcon\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n      display:flex;\r\n      height: 10rem;\r\n      width: 90%;\r\n      min-width: 40rem;\r\n      border-radius: 1rem;\r\n      background-color: white;\r\n      margin-top: 1.5rem;\r\n      box-shadow: 0 10px 15px 0 rgba(0, 0, 0, 0.04), 0 10px 20px 0 rgba(0, 0, 0, 0.09);\r\n      align-items: center;\r\n      \r\n      ${({isPalindrome}) => isPalindrome === false && css`\r\n          background-color: #efefef;\r\n      `} \r\n`;\r\n\r\nconst Expression = styled.div`\r\n      display:flex;\r\n      width: 65%;\r\n      height: 100%;\r\n      color: ${({theme}) => theme.colors.dark_blue};\r\n      font-size: ${({theme}) => theme.fontSize.xl};\r\n      font-weight: ${({theme}) => theme.fontWeight.semiBold};\r\n      align-items: center;\r\n      padding: 0 5%;\r\n      \r\n      ${({isPalindrome}) => isPalindrome === false && css`\r\n          color: ${({theme}) => theme.colors.text_gray};\r\n      `}\r\n`;\r\n\r\nconst StatusMessage = styled.div`\r\n      display:flex;\r\n      width: 25%;\r\n      height: 100%;\r\n      color: ${({theme}) => theme.colors.dark_blue};\r\n      font-size: ${({theme}) => theme.fontSize.m};\r\n      font-weight: ${({theme}) => theme.fontWeight.regular};\r\n      align-items: center;\r\n      justify-content: flex-end;\r\n      padding: 0;\r\n      \r\n      ${({isPalindrome}) => isPalindrome === false && css`\r\n          color: ${({theme}) => theme.colors.text_gray};\r\n      `}\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n      display:flex;\r\n      width: 10%;\r\n      height: 100%;\r\n      justify-content: center;\r\n      align-items: center;\r\n`;\r\n\r\n// --- GET EXPRESSION STATUS MESSAGE ---\r\nconst getStatusMessage = status => status ?\r\n    <StatusMessage isPalindrome={status}>It's a palindrome!</StatusMessage> :\r\n    <StatusMessage isPalindrome={status}>That's not a palindrome.</StatusMessage>;\r\n\r\n// --- GET EXPRESSION STATUS ICON ---\r\nconst getStatusIcon = status => status ? <CheckIcon/> : <ErrorIcon/>;\r\n\r\n\r\nconst PalindromeContainer = ({palindrome}) => {\r\n\r\n    const {value, isPalindrome} = palindrome;\r\n\r\n    return (\r\n        <Wrapper isPalindrome={isPalindrome}>\r\n            <Expression isPalindrome={isPalindrome}>{value}</Expression>\r\n            {getStatusMessage(isPalindrome)}\r\n            <IconWrapper>\r\n                {getStatusIcon(isPalindrome)}\r\n            </IconWrapper>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default PalindromeContainer;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport SearchBarContainer from \"../containers/SearchBarContainer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport PalindromeContainer from \"../containers/PalindromeContainer\";\r\nimport AppLogo from \"../logotypes/AppLogo\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n      display:flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n      align-items: center;\r\n      padding: 0 15% 10rem;\r\n      \r\n      h3{\r\n        color: ${({theme}) => theme.colors.dark_blue};\r\n      }\r\n`;\r\n\r\nconst Header = styled.header`\r\n      display:flex;\r\n      width: 100%;\r\n      height: 30vh;\r\n      min-height: 20rem;\r\n      background-color: white;\r\n      align-items: center;\r\n      justify-content: center;\r\n`;\r\n\r\nconst Palindromes = () => {\r\n\r\n    const palindromesCollection = useSelector(state => state.palindromes || []);\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <AppLogo/>\r\n            </Header>\r\n            <Wrapper>\r\n                <SearchBarContainer/>\r\n                <h3>Last checked</h3>\r\n                {palindromesCollection.map((palindrome, index) =>\r\n                    <PalindromeContainer key={index} palindrome={palindrome}/>)\r\n                }\r\n            </Wrapper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Palindromes;\r\n","import palindromesReducer from \"./reducers/palindromesReducer\";\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n// --- In real app here we should use redux-persist to preserve state on refresh ---\r\n\r\nconst store = createStore(palindromesReducer, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport {ROUTES} from \"./utils/routes\";\nimport AuthFrom from \"./components/views/AuthForm\";\nimport StylesProvider from \"./components/ui-config/StylesProvider\";\nimport PrivateRoute from \"./utils/routes/PrivateRoute\";\nimport Palindromes from \"./components/views/Palindromes\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/configureStore\";\n\n\nconst App = () => (\n    <Provider store={store}>\n        <StylesProvider>\n            <HashRouter basename='/'>\n                <Switch>\n                    <Route exact path={ROUTES.PUBLIC.AUTH} component={AuthFrom}/>\n                    <PrivateRoute exact path={ROUTES.USER.PALINDROMES} component={Palindromes}/>\n                </Switch>\n            </HashRouter>\n        </StylesProvider>\n    </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}